name: Release
on:
  workflow_run:
    workflows: ["Tests"]
    branches: ["master", "main"]
    types:
      - completed

permissions:
  contents: write

jobs:
  version:
    name: Gather version information
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    outputs:
      latest_version: ${{ steps.latest_version.outputs.version }}
      next_version: ${{ steps.next_version.outputs.version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup git-semver
        uses: PandasWhoCode/setup-git-semver@b6b17c8e4e6b307d2a66fd93797a9d30e48836e1 # v1.0.4
        with:
          version: latest

      - name: Latest version
        id: latest_version
        run: echo "version=$(git-semver --latest-version)" >> "${GITHUB_OUTPUT}"

      - name: Next version
        id: next_version
        run: echo "version=$(git-semver --next-version)" >> "${GITHUB_OUTPUT}"

  release:
    name: Release
    needs: version
    if: ${{ needs.version.outputs.latest_version != needs.version.outputs.next_version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup git-semver
        uses: PandasWhoCode/setup-git-semver@b6b17c8e4e6b307d2a66fd93797a9d30e48836e1 # v1.0.4
        with:
          version: latest

      - name: Generate Changelog
        id: generate_changelog
        env:
          VERSION=${{ needs.version.outputs.next_version }}
        run: |
          changelog=$(git-semver log --markdown "${VERSION}")
          echo "changelog<<EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version.outputs.next_version }}
          release_name: Release ${{ needs.version.outputs.next_version }}
          body: |
            ${{ steps.generate_changelog.outputs.changelog }}
          draft: false # Tag must be published before gitreleaser is executed
          prerelease: false

  build_and_publish_artifacts:
    name: Build and publish artifacts
    needs: [version, release]
    if: ${{ needs.version.outputs.latest_version != needs.version.outputs.next_version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

